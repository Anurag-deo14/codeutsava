{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\Desktop\\\\codeutsava\\\\frontend\\\\src\\\\layouts\\\\dashboardo\\\\apex.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApexChart = () => {\n  _s();\n  const [serverData, setServerData] = useState({});\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"http://localhost:5000/optimize\");\n      console.log(\"Response data:\", response.data);\n      setServerData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data from the server:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: parseFloat(value)\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // You can use the updated formData to update the chart data as needed\n    console.log(\"Form data submitted:\", formData);\n  };\n  console.log(\"Server data:\", serverData);\n  const CL = serverData.plot ? serverData.plot.Low[\"0\"] : 0;\n  const DL = serverData.plot ? serverData.plot.Low[\"1\"] : 0;\n  const NL = serverData.plot ? serverData.plot.Low[\"2\"] : 0;\n  const RL = serverData.plot ? serverData.plot.Low[\"3\"] : 0;\n  const ML = serverData.plot ? serverData.plot.Low[\"4\"] : 0;\n  const CH = serverData.plot ? serverData.plot.High[\"0\"] : 0;\n  const DH = serverData.plot ? serverData.plot.High[\"1\"] : 0;\n  const NH = serverData.plot ? serverData.plot.High[\"2\"] : 0;\n  const RH = serverData.plot ? serverData.plot.High[\"3\"] : 0;\n  const MH = serverData.plot ? serverData.plot.High[\"4\"] : 0;\n  console.log(\"CL:\", CL);\n  console.log(\"DL:\", DL);\n  console.log(\"NL:\", NL);\n  console.log(\"RL:\", RL);\n  console.log(\"ML:\", ML);\n  console.log(\"CH:\", CH);\n  console.log(\"DH:\", DH);\n  console.log(\"NH:\", NH);\n  console.log(\"RH:\", RH);\n  console.log(\"MH:\", MH);\n  const CLX = CL / 1000;\n  const DLX = DL / 1000;\n  const NLX = NL / 1000;\n  const RLX = RL / 1000;\n  const MLX = ML / 1000;\n  const CHA = CH / 1000;\n  const DHA = DH / 1000;\n  const NHA = NH / 1000;\n  const RHA = RH / 1000;\n  const MHA = MH / 1000;\n  const series = [{\n    name: \"Low\",\n    data: [formData.CLX, formData.DLX, formData.NLX, formData.RLX, formData.MLX]\n  }, {\n    name: \"High\",\n    data: [formData.CHA, formData.DHA, formData.NHA, formData.RHA, formData.MHA]\n  }];\n  const [options] = useState({\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        dataLabels: {\n          total: {\n            enabled: true,\n            offsetX: 0,\n            style: {\n              fontSize: \"13px\",\n              fontWeight: 900\n            }\n          }\n        }\n      }\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    title: {\n      text: \"Production Distribution\"\n    },\n    xaxis: {\n      categories: [\"Delhi\", \"Chennai\", \"Mumbai\", \"Nagpur\", \"Raipur\"],\n      labels: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: undefined\n      }\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n      offsetX: 40\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(ApexChart, \"QCFxeV1mbUbtRjGcRXVA2gfIMHE=\");\n_c = ApexChart;\nexport default ApexChart;\nvar _c;\n$RefreshReg$(_c, \"ApexChart\");","map":{"version":3,"names":["React","useState","useEffect","ReactApexChart","axios","jsxDEV","_jsxDEV","ApexChart","_s","serverData","setServerData","fetchData","response","get","console","log","data","error","handleInputChange","e","name","value","target","setFormData","formData","parseFloat","handleSubmit","preventDefault","CL","plot","Low","DL","NL","RL","ML","CH","High","DH","NH","RH","MH","CLX","DLX","NLX","RLX","MLX","CHA","DHA","NHA","RHA","MHA","series","options","chart","type","height","stacked","plotOptions","bar","horizontal","dataLabels","total","enabled","offsetX","style","fontSize","fontWeight","stroke","width","colors","title","text","xaxis","categories","labels","formatter","val","yaxis","undefined","tooltip","y","fill","opacity","legend","position","horizontalAlign","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anura/Desktop/codeutsava/frontend/src/layouts/dashboardo/apex.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nconst ApexChart = () => {\r\n  const [serverData, setServerData] = useState({});\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/optimize\");\r\n      console.log(\"Response data:\", response.data);\r\n      setServerData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data from the server:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Call the fetchData function when the component mounts\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: parseFloat(value) });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // You can use the updated formData to update the chart data as needed\r\n    console.log(\"Form data submitted:\", formData);\r\n  };\r\n\r\n  console.log(\"Server data:\", serverData);\r\n\r\n  const CL = serverData.plot ? serverData.plot.Low[\"0\"] : 0;\r\n  const DL = serverData.plot ? serverData.plot.Low[\"1\"] : 0;\r\n  const NL = serverData.plot ? serverData.plot.Low[\"2\"] : 0;\r\n  const RL = serverData.plot ? serverData.plot.Low[\"3\"] : 0;\r\n  const ML = serverData.plot ? serverData.plot.Low[\"4\"] : 0;\r\n  const CH = serverData.plot ? serverData.plot.High[\"0\"] : 0;\r\n  const DH = serverData.plot ? serverData.plot.High[\"1\"] : 0;\r\n  const NH = serverData.plot ? serverData.plot.High[\"2\"] : 0;\r\n  const RH = serverData.plot ? serverData.plot.High[\"3\"] : 0;\r\n  const MH = serverData.plot ? serverData.plot.High[\"4\"] : 0;\r\n  console.log(\"CL:\", CL);\r\n  console.log(\"DL:\", DL);\r\n  console.log(\"NL:\", NL);\r\n  console.log(\"RL:\", RL);\r\n  console.log(\"ML:\", ML);\r\n  console.log(\"CH:\", CH);\r\n  console.log(\"DH:\", DH);\r\n  console.log(\"NH:\", NH);\r\n  console.log(\"RH:\", RH);\r\n  console.log(\"MH:\", MH);\r\n  const CLX = CL / 1000;\r\n  const DLX = DL / 1000;\r\n  const NLX = NL / 1000;\r\n  const RLX = RL / 1000;\r\n  const MLX = ML / 1000;\r\n  const CHA = CH / 1000;\r\n  const DHA = DH / 1000;\r\n  const NHA = NH / 1000;\r\n  const RHA = RH / 1000;\r\n  const MHA = MH / 1000;\r\n\r\n  const series = [\r\n    {\r\n      name: \"Low\",\r\n      data: [formData.CLX, formData.DLX, formData.NLX, formData.RLX, formData.MLX],\r\n    },\r\n    {\r\n      name: \"High\",\r\n      data: [formData.CHA, formData.DHA, formData.NHA, formData.RHA, formData.MHA],\r\n    },\r\n  ];\r\n\r\n  const [options] = useState({\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 350,\r\n      stacked: true,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        dataLabels: {\r\n          total: {\r\n            enabled: true,\r\n            offsetX: 0,\r\n            style: {\r\n              fontSize: \"13px\",\r\n              fontWeight: 900,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      colors: [\"#fff\"],\r\n    },\r\n    title: {\r\n      text: \"Production Distribution\",\r\n    },\r\n    xaxis: {\r\n      categories: [\"Delhi\", \"Chennai\", \"Mumbai\", \"Nagpur\", \"Raipur\"],\r\n      labels: {\r\n        formatter: function (val) {\r\n          return val + \"K\";\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: undefined,\r\n      },\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return val + \"K\";\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n      horizontalAlign: \"left\",\r\n      offsetX: 40,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApexChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}