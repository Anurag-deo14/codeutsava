{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\Desktop\\\\codeutsava\\\\frontend\\\\src\\\\layouts\\\\dashboardo\\\\apex.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ApexChart = () => {\n  _s();\n  const [serverData, setServerData] = useState({});\n  const [formData, setFormData] = useState({\n    CLX: 0,\n    DLX: 0,\n    NLX: 0,\n    RLX: 0,\n    MLX: 0,\n    CHA: 0,\n    DHA: 0,\n    NHA: 0,\n    RHA: 0,\n    MHA: 0\n  });\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"http://localhost:5000/optimize\");\n      console.log(\"Response data:\", response.data);\n      setServerData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data from the server:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: parseFloat(value)\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // You can use the updated formData to update the chart data as needed\n    console.log(\"Form data submitted:\", formData);\n  };\n  console.log(\"Server data:\", serverData);\n  const series = [{\n    name: \"Low\",\n    data: [formData.CLX, formData.DLX, formData.NLX, formData.RLX, formData.MLX]\n  }, {\n    name: \"High\",\n    data: [formData.CHA, formData.DHA, formData.NHA, formData.RHA, formData.MHA]\n  }];\n  const [options] = useState({\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        dataLabels: {\n          total: {\n            enabled: true,\n            offsetX: 0,\n            style: {\n              fontSize: \"13px\",\n              fontWeight: 900\n            }\n          }\n        }\n      }\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    title: {\n      text: \"Production Distribution\"\n    },\n    xaxis: {\n      categories: [\"Delhi\", \"Chennai\", \"Mumbai\", \"Nagpur\", \"Raipur\"],\n      labels: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: undefined\n      }\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n      offsetX: 40\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: options,\n        series: series,\n        type: \"bar\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"CLX:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"CLX\",\n          value: formData.CLX,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ApexChart, \"QfSvORV880PbkD8qXylX6pcGo3g=\");\n_c = ApexChart;\nexport default ApexChart;\nvar _c;\n$RefreshReg$(_c, \"ApexChart\");","map":{"version":3,"names":["React","useState","useEffect","ReactApexChart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ApexChart","_s","serverData","setServerData","formData","setFormData","CLX","DLX","NLX","RLX","MLX","CHA","DHA","NHA","RHA","MHA","fetchData","response","get","console","log","data","error","handleInputChange","e","name","value","target","parseFloat","handleSubmit","preventDefault","series","options","chart","type","height","stacked","plotOptions","bar","horizontal","dataLabels","total","enabled","offsetX","style","fontSize","fontWeight","stroke","width","colors","title","text","xaxis","categories","labels","formatter","val","yaxis","undefined","tooltip","y","fill","opacity","legend","position","horizontalAlign","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","_c","$RefreshReg$"],"sources":["C:/Users/anura/Desktop/codeutsava/frontend/src/layouts/dashboardo/apex.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nconst ApexChart = () => {\r\n  const [serverData, setServerData] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    CLX: 0,\r\n    DLX: 0,\r\n    NLX: 0,\r\n    RLX: 0,\r\n    MLX: 0,\r\n    CHA: 0,\r\n    DHA: 0,\r\n    NHA: 0,\r\n    RHA: 0,\r\n    MHA: 0,\r\n  });\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/optimize\");\r\n      console.log(\"Response data:\", response.data);\r\n      setServerData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data from the server:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Call the fetchData function when the component mounts\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: parseFloat(value) });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // You can use the updated formData to update the chart data as needed\r\n    console.log(\"Form data submitted:\", formData);\r\n  };\r\n\r\n  console.log(\"Server data:\", serverData);\r\n\r\n  \r\n\r\n  const series = [\r\n    {\r\n      name: \"Low\",\r\n      data: [formData.CLX, formData.DLX, formData.NLX, formData.RLX, formData.MLX],\r\n    },\r\n    {\r\n      name: \"High\",\r\n      data: [formData.CHA, formData.DHA, formData.NHA, formData.RHA, formData.MHA],\r\n    },\r\n  ];\r\n\r\n  const [options] = useState({\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 350,\r\n      stacked: true,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        dataLabels: {\r\n          total: {\r\n            enabled: true,\r\n            offsetX: 0,\r\n            style: {\r\n              fontSize: \"13px\",\r\n              fontWeight: 900,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      colors: [\"#fff\"],\r\n    },\r\n    title: {\r\n      text: \"Production Distribution\",\r\n    },\r\n    xaxis: {\r\n      categories: [\"Delhi\", \"Chennai\", \"Mumbai\", \"Nagpur\", \"Raipur\"],\r\n      labels: {\r\n        formatter: function (val) {\r\n          return val + \"K\";\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: undefined,\r\n      },\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return val + \"K\";\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n      horizontalAlign: \"left\",\r\n      offsetX: 40,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id=\"chart\">\r\n        <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          CLX:\r\n          <input type=\"number\" name=\"CLX\" value={formData.CLX} onChange={handleInputChange} />\r\n        </label>\r\n        {/* Repeat the above label and input for other variables */}\r\n        <button type=\"submit\">Update Chart</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApexChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}