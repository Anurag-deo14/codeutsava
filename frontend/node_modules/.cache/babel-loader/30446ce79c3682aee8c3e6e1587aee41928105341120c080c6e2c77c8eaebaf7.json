{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\Desktop\\\\codeutsava\\\\frontend\\\\src\\\\layouts\\\\dashboardc\\\\dummy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApexChart = () => {\n  _s();\n  const [serverData, setServerData] = useState({});\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"http://localhost:5000/data\");\n      console.log(\"Response data:\", response.data);\n      setServerData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data from the server:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n  const CL = serverData.A ? serverData.A : 0;\n  const DL = serverData.B ? serverData.B : 0;\n  const NL = serverData.C ? serverData.C : 0;\n  const RL = serverData.D ? serverData.D : 0;\n  const ML = serverData.E ? serverData.E : 0;\n  const CH = serverData.F ? serverData.F : 0;\n  const DH = serverData.G ? serverData.G : 0;\n  const NH = serverData.H ? serverData.H : 0;\n  const RH = serverData.I ? serverData.I : 0;\n  const series = [{\n    name: \"Demand\",\n    data: [CL, DL, NL, RL, ML, CH, DH, NH, RH]\n  }];\n  const [options] = useState({\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        dataLabels: {\n          total: {\n            enabled: true,\n            offsetX: 0,\n            style: {\n              fontSize: \"13px\",\n              fontWeight: 900\n            }\n          }\n        }\n      }\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    title: {\n      text: \"Live Demand Data\"\n    },\n    xaxis: {\n      categories: [\"Raipur\", \"Bilaspur\", \"Ambikapur\", \"Nagpur\", \"Bhilai\", \"Raigarh\", \"Korba\", \"Jagdalpur\", \"Chimri\"],\n      labels: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: undefined\n      }\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n      offsetX: 40\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ApexChart, \"Pg1AsO6J/gz3xqN00Q7LkRXLoXI=\");\n_c = ApexChart;\nexport default ApexChart;\nvar _c;\n$RefreshReg$(_c, \"ApexChart\");","map":{"version":3,"names":["React","useState","useEffect","ReactApexChart","axios","jsxDEV","_jsxDEV","ApexChart","_s","serverData","setServerData","fetchData","response","get","console","log","data","error","CL","A","DL","B","NL","C","RL","D","ML","E","CH","F","DH","G","NH","H","RH","I","series","name","options","chart","type","height","stacked","plotOptions","bar","horizontal","dataLabels","total","enabled","offsetX","style","fontSize","fontWeight","stroke","width","colors","title","text","xaxis","categories","labels","formatter","val","yaxis","undefined","tooltip","y","fill","opacity","legend","position","horizontalAlign","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anura/Desktop/codeutsava/frontend/src/layouts/dashboardc/dummy.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nconst ApexChart = () => {\r\n  const [serverData, setServerData] = useState({});\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/data\");\r\n      console.log(\"Response data:\", response.data);\r\n      setServerData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data from the server:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Call the fetchData function when the component mounts\r\n  }, []);\r\n\r\n  const CL = serverData.A ? serverData.A : 0;\r\n  const DL = serverData.B ? serverData.B : 0;\r\n  const NL = serverData.C ? serverData.C : 0;\r\n  const RL = serverData.D ? serverData.D : 0;\r\n  const ML = serverData.E ? serverData.E : 0;\r\n  const CH = serverData.F ? serverData.F : 0;\r\n  const DH = serverData.G ? serverData.G : 0;\r\n  const NH = serverData.H ? serverData.H : 0;\r\n  const RH = serverData.I ? serverData.I : 0;\r\n\r\n  const series = [\r\n    {\r\n      name: \"Demand\",\r\n      data: [CL, DL, NL, RL, ML, CH, DH, NH, RH],\r\n    },\r\n  ];\r\n\r\n  const [options] = useState({\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 350,\r\n      stacked: true,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        dataLabels: {\r\n          total: {\r\n            enabled: true,\r\n            offsetX: 0,\r\n            style: {\r\n              fontSize: \"13px\",\r\n              fontWeight: 900,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      colors: [\"#fff\"],\r\n    },\r\n    title: {\r\n      text: \"Live Demand Data\",\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"Raipur\",\r\n        \"Bilaspur\",\r\n        \"Ambikapur\",\r\n        \"Nagpur\",\r\n        \"Bhilai\",\r\n        \"Raigarh\",\r\n        \"Korba\",\r\n        \"Jagdalpur\",\r\n        \"Chimri\",\r\n      ],\r\n      labels: {\r\n        formatter: function (val) {\r\n          return val + \"K\";\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: undefined,\r\n      },\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return val + \"K\";\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n      horizontalAlign: \"left\",\r\n      offsetX: 40,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApexChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}