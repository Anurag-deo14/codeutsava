{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\Desktop\\\\codeutsava\\\\frontend\\\\src\\\\layouts\\\\dashboardo\\\\radar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApexChart = () => {\n  _s();\n  const [serverData, setServerData] = useState({});\n  const initialData = {\n    series: [{\n      name: \"Delhi\",\n      data: [0, 0, 0, 0, 0]\n    }, {\n      name: \"Chennai\",\n      data: [0, 0, 0, 0, 0]\n    }, {\n      name: \"Mumbai\",\n      data: [0, 0, 0, 0, 0]\n    }, {\n      name: \"Nagpur\",\n      data: [0, 0, 0, 0, 0]\n    }, {\n      name: \"Raipur\",\n      data: [0, 0, 0, 0, 0]\n    }]\n  };\n  const [chartData, setChartData] = useState(initialData);\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"http://localhost:5000/optimize\");\n      console.log(\"Response data:\", response.data);\n      setServerData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data from the server:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []);\n  console.log(\"Server data:\", serverData);\n  const updateChartData = () => {\n    if (serverData.production) {\n      const newData = [serverData.production.Delhi, serverData.production.Chennai, serverData.production.Mumbai, serverData.production.Nagpur, serverData.production.Raipur];\n      setChartData({\n        ...chartData,\n        series: newData\n      });\n    }\n  };\n  const options = {\n    chart: {\n      height: 350,\n      type: \"radar\",\n      dropShadow: {\n        enabled: true,\n        blur: 1,\n        left: 1,\n        top: 1\n      }\n    },\n    title: {\n      text: \"Consumption Export Chart\"\n    },\n    stroke: {\n      width: 2\n    },\n    fill: {\n      opacity: 0.1\n    },\n    markers: {\n      size: 0\n    },\n    xaxis: {\n      categories: [\"Delhi\", \"Chennai\", \"Mumbai\", \"Nagpur\", \"Raipur\"]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateChartData,\n      children: \"Update Radar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: options,\n        series: chartData.series,\n        type: \"radar\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(ApexChart, \"37WAG5VZXK7xE94OWWjX8M8HX9M=\");\n_c = ApexChart;\nexport default ApexChart;\nvar _c;\n$RefreshReg$(_c, \"ApexChart\");","map":{"version":3,"names":["React","useState","useEffect","ReactApexChart","axios","jsxDEV","_jsxDEV","ApexChart","_s","serverData","setServerData","initialData","series","name","data","chartData","setChartData","fetchData","response","get","console","log","error","updateChartData","production","newData","Delhi","Chennai","Mumbai","Nagpur","Raipur","options","chart","height","type","dropShadow","enabled","blur","left","top","title","text","stroke","width","fill","opacity","markers","size","xaxis","categories","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/anura/Desktop/codeutsava/frontend/src/layouts/dashboardo/radar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\n\r\nconst ApexChart = () => {\r\n  const [serverData, setServerData] = useState({});\r\n\r\n  const initialData = {\r\n    series: [\r\n      {\r\n        name: \"Delhi\",\r\n        data: [0, 0, 0, 0, 0],\r\n      },\r\n      {\r\n        name: \"Chennai\",\r\n        data: [0, 0, 0, 0, 0],\r\n      },\r\n      {\r\n        name: \"Mumbai\",\r\n        data: [0, 0, 0, 0, 0],\r\n      },\r\n      {\r\n        name: \"Nagpur\",\r\n        data: [0, 0, 0, 0, 0],\r\n      },\r\n      {\r\n        name: \"Raipur\",\r\n        data: [0, 0, 0, 0, 0],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [chartData, setChartData] = useState(initialData);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/optimize\");\r\n      console.log(\"Response data:\", response.data);\r\n      setServerData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data from the server:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Call the fetchData function when the component mounts\r\n  }, []);\r\n\r\n  console.log(\"Server data:\", serverData);\r\n\r\n  const updateChartData = () => {\r\n    if (serverData.production) {\r\n      const newData = [\r\n        serverData.production.Delhi,\r\n        serverData.production.Chennai,\r\n        serverData.production.Mumbai,\r\n        serverData.production.Nagpur,\r\n        serverData.production.Raipur,\r\n      ];\r\n\r\n      setChartData({\r\n        ...chartData,\r\n        series: newData,\r\n      });\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    chart: {\r\n      height: 350,\r\n      type: \"radar\",\r\n      dropShadow: {\r\n        enabled: true,\r\n        blur: 1,\r\n        left: 1,\r\n        top: 1,\r\n      },\r\n    },\r\n    title: {\r\n      text: \"Consumption Export Chart\",\r\n    },\r\n    stroke: {\r\n      width: 2,\r\n    },\r\n    fill: {\r\n      opacity: 0.1,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    xaxis: {\r\n      categories: [\"Delhi\", \"Chennai\", \"Mumbai\", \"Nagpur\", \"Raipur\"],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={updateChartData}>Update Radar Chart</button>\r\n      <div id=\"chart\">\r\n        <ReactApexChart options={options} series={chartData.series} type=\"radar\" height={350} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApexChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}